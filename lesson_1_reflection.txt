How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed what changed between the two versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can quickly iterate through different versions and revert back to any version if needed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are the programmer knows a logical point to commit, cons are sometimes he can tend to commit and have a huge changeset to commit all at once.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because a logical change can impact multiple files at once.

How can you use the commands git log and git diff to view the history of files?

    git log gives a list of all commits made to the repository, and git diff can be used to view the differences between 2 commits.

How might using version control make you more confident to make changes that
could break something?

    Because it always gives me a way to fall back to the older version.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
